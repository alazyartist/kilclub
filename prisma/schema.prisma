// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
    relationMode = "prisma"
}

model User {
    user_id        String   @id @unique @default(cuid())
    stripe_customer_id  String? @unique
    subscription_tier  String?
    subscription_id  String?
    subscription_status  String?
    isBusiness  Boolean?
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    business_id String? @unique
    Business BusinessInfo[]
    Jobs Jobs[] @relation("Jobs")
    Reviews Jobs[] @relation("Reviews")
}

model BusinessInfo{
    business_id String @id @unique @default(cuid())
    User User? @relation(fields: [business_id],references: [business_id])
    business_name String
    website String?
    phone_number String
    zip_code String
    Jobs Jobs[]
    Categories BusinessCategories[]
    Category Category[]
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
@@index([business_id])
}

model Jobs{
    job_id String @id @unique
    business_id String 
    customer_phone_number String
    zip_code String
    date DateTime @default(now())
    reviewer_id String?
    isCompleted Boolean? @default(false)
    isReviewed Boolean? @default(false)
    User User @relation("Jobs",references: [business_id],fields: [business_id],map: "user")
    Reviewer User? @relation("Reviews",fields: [reviewer_id],references: [user_id],map:"reviewer")
    Business BusinessInfo @relation(references: [business_id],fields: [business_id],map: "business")
    review String? @db.Text()
    media Json?
    problem_solved Boolean?
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    Categories JobCategories[]
    Category Category[]
@@index([business_id])
@@index([reviewer_id])
}

model JobCategories {
    id Int @id @default(autoincrement())
    job_id String
    Job Jobs @relation(fields: [job_id],references: [job_id])
    category_id String
    Category Category @relation(fields: [category_id],references: [category_id])
@@index([job_id])
@@index([category_id])
@@unique([job_id,category_id])
}
model BusinessCategories {
    id Int @id @default(autoincrement())
    business_id String
    Business BusinessInfo @relation(fields: [business_id],references: [business_id])
    category_id String
    Category Category @relation(fields: [category_id],references: [category_id])
@@index([business_id])
@@index([category_id])
@@unique([business_id,category_id])
}

model Category {
    category_id String @id @unique @default(cuid())
    name    String @unique
    type    String
    Parents    ChildCategories[] @relation("Children")
    Children    ChildCategories[] @relation("Parents")
    JobsCategories JobCategories[]
    BusinessesCategories BusinessCategories[]
    Jobs Jobs[]
    Businesses BusinessInfo[]

}
model ChildCategories {
    id Int @id @default(autoincrement())
    parent_id String
    child_id String
    Parent Category? @relation("Parents",fields: [parent_id],references: [category_id])
    Child Category? @relation("Children",fields: [child_id],references: [category_id])
@@index([parent_id])
@@index([child_id])
@@unique([parent_id,child_id])
} 
